// <auto-generated />
using System;
using IntellProdLifeCycleMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntellProdLifeCycleMS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211109231655_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FirstName")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IntelliegentWorkId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LastName")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberInList")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatronamicName")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShortFirstName")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShortPatronamicName")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IntelliegentWorkId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.EducationalProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EdProgramName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("EducationalPrograms");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.Indexation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IntelliegentWorkId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Link")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IntelliegentWorkId");

                    b.ToTable("Indexations");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.IntelliegentWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<int>("DOI")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GRINTI")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subtitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IntelliegentWorks");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IntelliegentWork");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.KeyWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IntelliegentWorkId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Word")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IntelliegentWorkId");

                    b.ToTable("KeyWords");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.Book", b =>
                {
                    b.HasBaseType("IntellProdLifeCycleMS.Domain.Models.IntelliegentWork");

                    b.Property<string>("Edition")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Organization")
                        .HasColumnType("TEXT");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("UDK")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Book");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.Author", b =>
                {
                    b.HasOne("IntellProdLifeCycleMS.Domain.Models.IntelliegentWork", "IntelliegentWork")
                        .WithMany("Authors")
                        .HasForeignKey("IntelliegentWorkId");

                    b.Navigation("IntelliegentWork");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.EducationalProgram", b =>
                {
                    b.HasOne("IntellProdLifeCycleMS.Domain.Models.Book", "Book")
                        .WithMany("EducationalPrograms")
                        .HasForeignKey("BookId");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.Indexation", b =>
                {
                    b.HasOne("IntellProdLifeCycleMS.Domain.Models.IntelliegentWork", "IntelliegentWork")
                        .WithMany("Indexations")
                        .HasForeignKey("IntelliegentWorkId");

                    b.Navigation("IntelliegentWork");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.KeyWord", b =>
                {
                    b.HasOne("IntellProdLifeCycleMS.Domain.Models.IntelliegentWork", "IntelliegentWork")
                        .WithMany("KeyWords")
                        .HasForeignKey("IntelliegentWorkId");

                    b.Navigation("IntelliegentWork");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.IntelliegentWork", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Indexations");

                    b.Navigation("KeyWords");
                });

            modelBuilder.Entity("IntellProdLifeCycleMS.Domain.Models.Book", b =>
                {
                    b.Navigation("EducationalPrograms");
                });
#pragma warning restore 612, 618
        }
    }
}
