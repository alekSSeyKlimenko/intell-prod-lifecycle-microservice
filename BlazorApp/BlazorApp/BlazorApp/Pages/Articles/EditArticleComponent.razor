@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using BlazorApp.Models
@using BlazorApp.Shared
@inject NavigationManager Navigation
<ModalBlock @ref="@modal">
    <Body>
        <h3>Редактировать Article</h3>

        <br />
        <span>ID: @article.Id</span>
        <br />

        <input class="" @bind="newTitle" placeholder="Collection Title" />
        <input class="" @bind="newStartPage" placeholder="Start Page" />
        <input class="" @bind="newEndPage" placeholder="End Page" />
        <input class="" @bind="newMagazineNum" placeholder="Magazine Number" />
        <input class="" @bind="newPart" placeholder="Part" />
        <input class="" @bind="newConference" placeholder="Conference" />

        <button class="btn btn-dark" @onclick="EditArticle">Редактировать Article</button>
    </Body>
</ModalBlock>

@code {
    [Parameter]
    public Article article { get; set; }

    int id;
    private string newTitle;


    private ModalBlock modal { get; set; }

    private int newStartPage;
    private int newEndPage;
    private int newMagazineNum;
    private int newPart;
    private string newConference;



    [Parameter]
    public EventCallback<string> OnEditArticle { get; set; }

    protected override void OnParametersSet()
    {
        id = article.Id;
        newTitle = article.CollectionTitle;
        newEndPage = article.EndPage;
        newStartPage = article.StartPage;
        newMagazineNum = article.MagazineNumber;
        newPart = article.Part;
        newConference = article.Conference;

    }

    public void onOpen()
    {
        modal.Open();
    }

    private async Task EditArticle()
    {
        modal.Close();
        var article = new Article
        {
            Id = id,
            CollectionTitle = newTitle,
            StartPage = newStartPage,
            EndPage = newEndPage,
            MagazineNumber = newMagazineNum,
            Part = newPart,
            Conference = newConference
        };


        await Http.PutAsJsonAsync("https://localhost:44302/api/Articles/" + article.Id, article);
        await OnEditArticle.InvokeAsync("OK");
        Navigation.NavigateTo("Articles", true);


    }

}
